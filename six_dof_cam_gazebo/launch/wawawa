<?xml version="1.0"?>
<launch>
	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
	<arg name="cam_model" default="$(find six_dof_cam_description)/urdf/six_dof_cam.xacro"/>
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>

	<!-- Load the URDF into the ROS Parameter Server -->
	<param name="six_dof_cam/robot_description" command="$(find xacro)/xacro --inorder $(arg cam_model)" />

	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	<node name="cam_urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -cam_model six_dof_cam -param six_dof_cam/robot_description"/>

	<!-- ros_control motoman launch file -->
	<include file="$(find six_dof_cam_control)/launch/six_dof_cam_controll.launch"/>

	<node pkg="six_dof_cam_vr_controller" name="vr_cam_controller" type="vr_controller.py" required="true" />
</launch>
